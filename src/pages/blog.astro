---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
const posts = await Astro.glob('../pages/posts/*.md')
---

<Layout title="CodeWithEternal Blog.">
	<main>
		<h1>My HomeLab Learning blog</h1>
		<ul role="list" class="link-card-grid">
		    <Card
                href="/"
                title="Home"
                body=""
            />
			<Card
				href="/about"
				title="About"
				body="About CodeWithEternal"
			/>
			<Card
				href="#"
				title="Blog"
				body="Check out my posts."
			/>
		</ul>
	</main>

{posts?.map(post => (
    <article>
        <h2><a href={post.frontmatter.url}>{post.frontmatter.title}</a></h2>
        <p>{post.frontmatter.description}</p>
        <p>Published {post.frontmatter.publishDate}</p>
    </article>
))}

</Layout>

<style>
    main {
        text-align: center;
    }

	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}

	article {
	    background-color: white;
	    padding: 0.925rem;
	    background-image: var(--accent-gradient);
        background-size: 400%;
        border-radius: 0.5rem;
        background-position: 100%;
        transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
	}
	article:is(:hover, :focus-within) {
    	color: rgb(var(--accent));
    }

    article:is(:hover, :focus-within) {
        background-position: 0;
        opacity: 0.8;
    }
</style>
